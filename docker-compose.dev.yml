services:
  mongodb:
    image: mongo:latest
    container_name: openai_outreach_mongodb_dev
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=openai_outreach
    networks:
      - app-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: openai_outreach_backend_dev
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - FLASK_ENV=development
      - PORT=8000
      - MONGODB_URI=mongodb://mongodb:27017/openai_outreach
    volumes:
      - ./app:/app
    networks:
      - app-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: openai_outreach_frontend_dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/index.html:/app/index.html
      - ./frontend/vite.config.js:/app/vite.config.js
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]

networks:
  app-network:
    driver: bridge

volumes:
  mongodb_dev_data:
    driver: local